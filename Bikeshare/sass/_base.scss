$blueprint-grid-columns : 24;
$blueprint-grid-width   : 30px;
$blueprint-grid-margin  : 10px;
$font-color             : #333;

@import "compass/utilities";
@import "blueprint";
@import "compass/css3";

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

@mixin animation($name, $duration, $iteration, $timing) {
    animation-duration: $duration;
    -moz-animation-duration: $duration;
    -webkit-animation-duration: $duration;
    
    animation-iteration-count: $iteration;
    -moz-animation-iteration-count: $iteration;
    -webkit-animation-iteration-count: $iteration;

    animation-name: $name;
    -moz-animation-name: $name;
    -webkit-animation-name: $name;

    animation-timing-function: $timing;
    -moz-animation-timing-function: $timing;
    -webkit-animation-timing-function: $timing;
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

@mixin background-linear-gradient-down($from, $to, $default:$from) {
    background-color: $default;
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($from), to($to));
    background-image: -webkit-linear-gradient(top, $from, $to);
    background-image: -o-linear-gradient(top, $from, $to);
    background-image: linear-gradient(to bottom, $from, $to);
    background-image: -moz-linear-gradient(top, $from, $to);
    background-repeat: repeat-x;
    @include filter-gradient($from, $to, vertical);
}

@mixin background-linear-gradient-right($from, $to, $default:$from) {
    background-color: $default;
    background-color: transparent;
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($from), to($to));
    background-image: -webkit-linear-gradient(right, $from, $to);
    background-image: -o-linear-gradient(right, $from, $to);
    background-image: linear-gradient(to left, $from, $to);
    background-image: -moz-linear-gradient(right, $from, $to);
    background-position: center top;
    background-repeat: repeat-y;
    filter: progid:dximagetransform.microsoft.gradient(startColorstr='$from', endColorstr='$to', GradientType=0);
}

@mixin border-box {
    @include box-sizing(border-box);
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}
/* Usage
.button {
  @include border-radius(5px);
}

.submit-button {
  @include border-top-radius(10px);
  @include border-right-radius(8px);
  @include border-bottom-radius(10px);
  @include border-left-radius (6px);
}
*/

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
/* Usage
.article-heading {
  @include opacity(0.8);
}
*/

@mixin breakpoint($point) {
  @if $point == large {
    @media (min-width: 64.375em) { @content; }
  }
  @else if $point == medium {
    @media (min-width: 50em) { @content; }
  }
  @else if $point == small {
    @media (min-width: 37.5em)  { @content; }
  }
}
/* Usage
.page-wrap {
  width: 75%;
  @include breakpoint(large) { width: 60%; }
  @include breakpoint(medium) { width: 80%; }
  @include breakpoint(small) { width: 95%; }
}
-----------------------------------------------
Output

.page-wrap {
  width: 75%;
}
@media (min-width: 64.375em) {
  .page-wrap {
    width: 60%;
  }
}
@media (min-width: 50em) {
  .page-wrap {
    width: 80%;
  }
}
@media (min-width: 37.5em) {
  .page-wrap {
    width: 95%;
  }
}
*/


@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}
/* Usage
.abs {
  @include abs-pos(10px, 10px, 5px, 15px);
}
*/

@mixin font-size($sizeValue: 12 ){
  font-size: $sizeValue + px; //fallback for old browsers
  font-size: (0.125 * $sizeValue) + rem;
}

/* Usage
body {
  @include font-size(16);
}
*/

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Usage
.text-truncate {
  @include text-truncate;
}
*/